/* Copyright (c) 2013, Yisui Hu <easeway@gmail.com> */!function(exports){"use strict";var DD={VERSION:"2.0.0"};DD.defClass=function(base,proto){if(typeof(base)!='function'){proto=base;base=Object;}
if(!proto){proto={};}
proto.__proto__=base.prototype;var theClass=function(){if(typeof(this.constructor)=='function'){this.constructor.apply(this,arguments);}};theClass.prototype=proto;return theClass;};DD.NotImplementedError=DD.defClass(Error,{constructor:function(name){this.super.constructor.call(this,"Not implemented: "+name);}});var Compatibility=DD.defClass({constructor:function(){this.tests=[];},get ok(){return this.compatible;},get compatible(){this._testOnDemand();return this._compatible;},get report(){this._testOnDemand();return this._compatible;},register:function(suiteName,testFn){this.tests.push({name:suiteName,test:testFn});delete this._report;delete this._compatible;},test:function(){var report={},fails=0;this.tests.forEach(function(test){var results={};try{if(test.test(results)){results.ok=true;}}catch(e){results.error=e;delete results.ok;}
if(!results.ok)fails++;report[test.name]=results;});this._report=report;this._compatible=fails==0;},_testOnDemand:function(){if(!this._report){this.test();}}});DD.compatibility=new Compatibility();var exported=exports.DataDrive||exports.DD;if(exported&&exported.settings){DD.settings=exported.settings;}else{DD.settings={};}
exports.DataDrive=exports.DD=DD;}(window);!function(DD){"use strict";DD.Observer=DD.defClass({constructor:function(context){this.context=context||this;this.listeners=[];},add:function(listener){this.listeners.push(listener);return this;},remove:function(listener){var index=this.listeners.indexOf(listener);if(index>=0){this.listeners.splice(index,1);}
return this;},notify:function(){var ctx=this.context;var args=arguments;this.listeners.forEach(function(listener){listener.apply(ctx,args);});return this;}});DD.Listener=DD.defClass({constructor:function(callback,context){this.observer=null;this.callback=callback;this.context=context;var self=this;this._notifier=function(){self.onNotify.apply(self,arguments);}},listen:function(observer){if(this.observer){this.observer.remove(this._notifier);}
this.observer=observer;if(this.observer){this.observer.add(this._notifier);}},shutdown:function(){this.listen(null);},get listening(){return this.observer!=null;},onNotify:function(){if(typeof(this.callback)=='function'){var ctx=this.context||this;this.callback.apply(ctx,arguments);}}});}(DataDrive);!function(DD){"use strict";function callExtension(fn,ext,args,value){var params=[].slice.call(args,0);params.push(value);return fn.apply(ext,params);}
var Extensions=DD.defClass({constructor:function(){this.extensions={};},connect:function(extensionPoint,extension){var exts=this.extensions[extensionPoint];if(!exts){this.extensions[extensionPoint]=exts=[];}
exts.push(extension);return this;},use:function(extensionPoint,op){var exts=this.extensions[extensionPoint];if(!exts){return function(){return undefined;};}
if(typeof(op)=='function'){return function(){var args=arguments;return exts.reduce(function(value,ext){return callExtension(op,ext,args,value);},undefined);};}else{return function(){var args=arguments;return exts.reduce(function(value,ext){var fn=ext[op];if(typeof(fn)=='function'){return callExtension(fn,ext,args,value);}
return value;},undefined);};}}});DD.extensions=new Extensions();}(DataDrive);!function(DD){"use strict";var Value=DD.defClass(DD.Observer,{constructor:function(){DD.Observer.prototype.constructor.call(this);this.__s={caching:false,cachedRev:null,cachedVal:null,valueRev:0}},get value(){if(!this.__s.caching){return this.getVal();}
if(this.__s.cachedRev===this.__s.valueRev){return this.__s.cachedVal;}
this.__s.cachedVal=this.getVal();this.__s.cachedRev=this.__s.valueRev;return this.__s.cachedVal;},set value(val){var oldVal=this.value;var newVal=this.setVal(val);this.flush({change:'update',oldVal:oldVal,newVal:newVal});},query:function(path,callback){var names;if(Array.isArray(path)){names=path;}else{names=path.split(".");}
var value=this,left=undefined;for(var i=0;i<names.length;i++){if(names[i]=='')continue;if(typeof(value.findProperty)=='function'){var next=value.findProperty(names[i]);if(next){value=next;continue;}}
left=names.slice(i);break;}
if(typeof(callback)=='function'){return callback(value,left);}
return left?null:value;},flush:function(notification){if(this.__s.caching){this.__s.cachedVal=null;this.__s.valueRev++;}
if(notification){notification.data=this;this.notify(notification);}
return this;},refresh:function(){return this.notify({change:'update',refresh:true,data:this});}});var Scalar=DD.defClass(Value,{constructor:function(){Value.prototype.constructor.call(this);this._value=null;},getVal:function(){return this._value;},setVal:function(val){return this._value=val;}});var List=DD.defClass(Value,{constructor:function(itemType){Value.prototype.constructor.call(this);this.isList=true;this.itemType=itemType;this.items=[];},findProperty:function(name){var index=parseInt(name);return isNaN(index)?null:this.items[index];},getVal:function(){return this.items.map(function(item){return item.value;});},setVal:function(items){if(Array.isArray(items)){var val=[];this.items=this._createItems(items,function(v){val.push(v);});return val;}else if(items===null||items===undefined){this.items=[];return[];}
throw new TypeError("items is not an Array");},refresh:function(){this.items.forEach(function(item){item.refresh();});return Value.prototype.refresh.call(this);},get length(){return this.items.length;},at:function(index){return this.items[index];},valAt:function(index){var item=this.at(index);return item?item.value:undefined;},update:function(index,items){if(items&&!Array.isArray(items)){items=[items];}
if(Array.isArray(items)&&items.length>0){var updates=[],updIndex=null,updOff;for(var n in items){var i=parseInt(n);if(isNaN(i))continue;var item=this.at(i+index);if(item==undefined&&items[n]==undefined)continue;if(updIndex==null){updIndex=index+i;updOff=i;}
if(items[n]==undefined){delete this.items[i+index];}else if(item==undefined){var v=Type.createValue(this.itemType);v.value=items[n];this.items[i+index]=v;}else{item.value=items[n];}
updates[i-updOff]=this.items[i+index];}
if(updIndex){this.flush({change:'items',op:'update',index:updIndex,items:updates});}}
return this;},insert:function(index,items){if(items&&!Array.isArray(items)){items=[items];}
if(Array.isArray(items)&&items.length>0){var values=this._createItems(items);this.items.splice.apply(this.items,[index,0].concat(values));this.flush({change:'items',op:'insert',index:index,items:values});}
return this;},remove:function(index,count){if(!count)count=1;else if(count<0)count=this.items.length-index;var values=this.items.splice(index,count);this.flush({change:'items',op:'remove',index:index,items:values});return this;},append:function(items){return this.insert(this.items.length,items);},_createItems:function(items,proc){if(!proc)proc=function(){};var itemType=this.itemType;return items.map(function(item){var v=Type.createValue(itemType);proc(v.value=item);return v;});}});var Model=DD.defClass(Value,{constructor:function(schema){Value.prototype.constructor.call(this);this._properties={};if(schema instanceof Schema){this._schema=schema;for(var key in schema.descriptor){this.define(key,schema.descriptor[key]);}
schema.modelCreated(this);}},define:function(name,type){var v=Type.createValue(type);var self=this;Object.defineProperty(this,name,{get:function(){return v.isList?v:v.value;},set:function(newVal){var val=v.value=newVal;self.flush({change:'property',name:name,value:val});return val;}});this._properties[name]=v;return v;},findProperty:function(name){return this._properties[name];},getVal:function(){var val={};for(var name in this._properties){var key=this._schema?this._schema.mapName(name):name;val[key]=this._properties[name].value;}
return val;},setVal:function(data){var val={};for(var name in this._properties){var key=this._schema?this._schema.mapName(name):name;val[key]=this._properties[name].value=data?data[key]:null;}
return val;},refresh:function(){for(var name in this._properties){this._properties[name].refresh();}
return Value.prototype.refresh.call(this);}});var Type=DD.defClass({createValue:function(){throw new DD.NotImplementedError("createValue");}});Type.createValue=function(typeOrVal){var v;if(!typeOrVal){v=new Scalar();}else if(Array.isArray(typeOrVal)){v=new List(typeOrVal[0]);}else if(typeOrVal instanceof Type){v=typeOrVal.createValue();}else if(typeOrVal instanceof Value){v=typeOrVal;}else{throw new TypeError("type must be instance of DD.Type or DD.Value");}
return v;};var Schema=DD.defClass(Type,{constructor:function(descriptor,options){this.descriptor=descriptor;this.options=options||{};this.nameMap=options&&options.mappings?options.mappings:{};DD.extensions.use("Schema","options")(options,this);},createValue:function(){return new Model(this);},modelCreated:function(model){DD.extensions.use("Schema","modeling")(model,this);},mapName:function(name){return this.nameMap[name]==undefined?name:this.nameMap[name];}});var ScalarType=DD.defClass(Type,{createValue:function(){return new Scalar();}});DD.Value=Value;DD.Scalar=Scalar;DD.List=List;DD.Model=Model;DD.Type=Type;DD.ScalarType=ScalarType;DD.Schema=Schema;DD.Types={Scalar:new ScalarType()};DD.ModelRegistry=DD.defClass(Model,{constructor:function(){Model.prototype.constructor.call(this);},register:function(name,type){var val=this._properties[name];if(val){val=this._properties[name]=Type.createValue(type);}else{val=this.define(name,type);}
return val;}});DD.Models=new DD.ModelRegistry();}(DataDrive);!function(DD){"use strict";var BINDING_PROP="__dd_binding";var ATTR_MAP="data-drive-map";var ATTR_ON="data-drive-on";var ATTR_OPTS="data-drive-opts";var ATTR_LIST="data-drive-list";var SUBST_REGEX=/%\{[^\}]+\}/g;function binarySearch(array,compare,from,to){if(typeof(compare)!='function'){var val=compare;compare=function(v){return val-v;}}
var mi=from,ma=to,m=0,d=0;if(mi==undefined)mi=0;if(ma==undefined)ma=array.length-1;while(mi<=ma){m=(mi+ma)>>1;d=compare(array[m]);if(d==0){break;}else if(d>0){mi=m+1;}else{ma=m-1;}}
if(d>0)m++;return m;}
var SparseIndex=DD.defClass({constructor:function(array){this.indices=Object.keys(array);this.from=0;},closest:function(index,next){if(!next)this.from=0;var n=binarySearch(this.indices,index,this.from);this.from=n;return this.indices[n]?parseInt(this.indices[n]):undefined;}});function bindingFromNode(node){return node[BINDING_PROP];}
var Binding=DD.defClass(DD.Listener,{constructor:function(root,scope,params){DD.Listener.prototype.constructor.call(this);this.root=root;this.scope=scope;this.element=params.element;this.node=params.node;this.options=params.options||{};this.handlers=[];if(Array.isArray(params.contents)){this.contents=params.contents;this.handlers.push(function(change){var self=this;this.node.textContent=this.contents.reduce(function(text,content){if(typeof(content)=='function'){text+=content.call(self,change,self.data,self.element,self.node);}else{text+=content;}
return text;},"");});}else{if(typeof(params.script)=='function'){this.script=params.script;this.changes=params.changes;this.handlers.push(function(change){if(!this.changes||this.changes[change.change]){this.script.call(this,change,this.data,this.element,this.node);}});}}
if(params.dataSource&&params.dataSource[0]!='.'){this.data=scope.dataRoot.query(params.dataSource);}else{var data=params.data;if(!data){for(var elem=this.element;elem&&elem!=root.parentElement;elem=elem.parentElement){var binding=bindingFromNode(elem);if(binding){data=binding.data;break;}}}
if(!data){data=scope.dataRoot;}
if(params.dataSource){data=data.query(params.dataSource.substr(1));}
this.data=data;}
if(this.data){if(this.data.isList){if(typeof(params.listFactory)=='function'){this.listFactory=params.listFactory.call(this,this.data,this.element,this.node);}else{this.listFactory=autoSelectListFactory(this);}}
if(this.listFactory||this.handlers.length>0){this.listen(this.data);}}else{console.error("Data model not found: "+params.dataSource);}},get isList(){return!!this.listFactory;},unbind:function(){this.shutdown();},onNotify:function(change){if(this.isList){this.listFactory.onChange(change);}
this.handlers.forEach(function(handler){handler.call(this,change);},this);},});function buildFunction(script){var fn;return eval("fn = function ($C, $D, $E, $N) { "+script+" }");}
function buildStatement(script){var fn;return eval("fn = function ($C, $D, $E, $N) { return ( "+script+" ); }");}
Binding.create=function(node,root,scope,opts){var params={};if(opts.data){params.data=opts.data;}
if(node.nodeType==1){var attr=node.attributes.getNamedItem(ATTR_MAP);if(attr){params.dataSource=attr.value.trim();params.node=node;}
if((attr=node.attributes.getNamedItem(ATTR_ON))){var i=attr.value.indexOf(':');if(i>=0){params.script=buildFunction(attr.value.substr(i+1));params.changes={};var changes=attr.value.substr(0,i).split(',');var count=0;for(var i=0;i<changes.length;i++){var name=changes[i].trim();if(name==="*"){params.changes=null;break;}else if(name!=""){params.changes[name]=true;count++;}}
if(count==0){params.changes=null;}}else{params.script=buildFunction(attr.value);params.changes=null;}
params.node=node;}
if((attr=node.attributes.getNamedItem(ATTR_OPTS))){params.options=attr.value.split(';').reduce(function(result,item){var i=item.indexOf(':');if(i>0){result[item.substr(0,i).trim()]=item.substr(i+1).trim();}
return result;},{});if(params.options.bind){params.node=node;}}
if((attr=node.attributes.getNamedItem(ATTR_LIST))){params.listFactory=buildStatement(attr.value);}
if(params.data){params.node=node;}
if(params.node){params.element=node;}}else{params.contents=[];SUBST_REGEX.lastIndex=0;var text=node.textContent,start=0,m,count=0;while((m=SUBST_REGEX.exec(text))!=null){var scriptBegin=m.index;if(scriptBegin>start){params.contents.push(text.substr(start,scriptBegin-start));}
start=SUBST_REGEX.lastIndex;params.contents.push(buildStatement(m[0].substr(2,m[0].length-3)));count++;}
if(count>0){if(start<text.length){params.contents.push(text.substr(start));}}
if(count>0||params.data){params.node=node;params.element=node.parentElement||opts.container;}}
if(params.element){return new Binding(root,scope,params);}
return null;};var ListFactory=DD.defClass({constructor:function(binding){this.binding=binding;},get container(){return this.binding.element;},get nodesPerItem(){if(Array.isArray(this.nodesTemplate)){return this.nodesTemplate.length;}
throw new DD.NotImplementedError("nodesPerItem not implemented");},rebuild:function(){this.container.innerHTML="";this.items=this._createItemViews(this.binding.data.items);this.items.forEach(function(view){view.nodes.forEach(function(node){this.container.appendChild(node);},this);},this);return this;},onChange:function(change){if(change.change=='update'){this.rebuild();}else if(change.change=='items'&&change.op){var fn="onItems"+change.op[0].toUpperCase()+change.op.substr(1);if(typeof(this[fn])=='function'){this[fn].call(this,change.index,change.items);}}},onItemsInsert:function(index,items){var insertFn=this._insertItemViewFn(index);var views=this._createItemViews(items);views.forEach(function(view){insertFn.call(this,view);},this);this.items.splice(index,0,views);},onItemsRemove:function(index,items){var indices=new SparseIndex(this.items);var startIndex=indices.closest(index);if(startIndex!=undefined){var endIndex=indices.closest(index+items.length,true);var views=this.items.slice(startIndex,endIndex);views.forEach(this._removeItemView,this);}
this.items.splice(index,items.length);},onItemsUpdate:function(index,items){var removes=[];items.forEach(function(item,n){if(!item&&this.items[index+n]){this._removeItemView(this.items[index+n]);removes.push(index+n);}else if(item&&!this.items[index+n]){var insertFn=this._insertItemViewFn(index+n);var view=this._createItemViews([item])[0];insertFn.call(this,view);this.items[index+n]=view;}},this);},createItemNodes:function(){if(Array.isArray(this.nodesTemplate)){return this.nodesTemplate.map(function(node){return node.cloneNode(true);});}
throw new DD.NotImplementedError("createItemNodes not implemented");},_createItemViews:function(items){return items.map(function(item){var itemView={data:item,nodes:this.createItemNodes()};itemView.nodes.forEach(function(node){bindDOMTree(node,node,this.binding.scope,{data:item,container:this.container});},this);item.refresh();return itemView;},this);},_findDirectChild:function(node){while(node&&node.parentElement!=this.container){node=node.parentElement;}
return node;},_insertItemViewFn:function(index){var at=new SparseIndex(this.items).closest(index);var refNode=this._findDirectChild(at!=undefined?this.items[at].nodes[0]:null);var insertNodeFn=refNode?function(node){this.container.insertBefore(node,refNode);}:function(node){this.container.appendChild(node);};return function(view){view.nodes.forEach(function(node){insertNodeFn.call(this,node);},this);}},_removeItemView:function(view){view.nodes.forEach(function(node){var child=this._findDirectChild(node);if(child){this.container.removeChild(child);}},this);}});var TemplateListFactory=DD.defClass(ListFactory,{constructor:function(binding){ListFactory.prototype.constructor.call(this,binding);var template=this.container;if(binding.options.item){template=jQuery(binding.root).find(binding.options.item)[0];}
var children=template?template.childNodes:[];this.nodesTemplate=[];for(var i=0;i<children.length;i++){this.nodesTemplate.push(children[i]);}
this.container.innerHTML="";}});function autoSelectListFactory(binding){return new TemplateListFactory(binding);}
function unbindNode(node){var binding=node[BINDING_PROP];if(binding){binding.unbind();delete node[BINDING_PROP];}}
function bindNode(node,root,scope,opts){if(!opts.noUnbind){unbindNode(node);}else if(node[BINDING_PROP]){return true;}
var binding=Binding.create(node,root,scope,opts);if(binding){Object.defineProperty(node,BINDING_PROP,{get:function(){return binding;},configurable:true,enumerable:false});return true;}
return false;}
function traverseDOMTree(node,callback,level){if(level==undefined){level=0;}
switch(node.nodeType){case 1:callback(node,level);for(var i=0;i<node.childNodes.length;i++){traverseDOMTree(node.childNodes[i],callback,level+1);}
break;case 3:callback(node,level);break;}}
function unbindDOMTree(node){traverseDOMTree(node,function(node){unbindNode(node);});}
function bindDOMTree(node,root,scope,opts){traverseDOMTree(node,function(node,level){if(level>0){delete opts.data;}
bindNode(node,root,scope,opts);});}
var DOMObserverClass=window.MutationObserver;if(!DOMObserverClass){DOMObserverClass=window.WebKitMutationObserver;}
if(!DOMObserverClass){DOMObserverClass=DD.defClass({constructor:function(callback){this.callback=callback;this.record={removedNodes:[],addedNodes:[]};var self=this;this.handlerNodeUpdated=function(ev){self.onNodeChange(self.record.addedNodes,ev);};this.handlerNodeRemoved=function(ev){self.onNodeChange(self.record.removedNodes,ev);};},observe:function(element){this.disconnect();this.observed=element;this.observed.addEventListener("DOMNodeInserted",this.handlerNodeUpdated);this.observed.addEventListener("DOMNodeRemoved",this.handlerNodeRemoved);this.observed.addEventListener("DOMCharacterDataModified",this.handlerNodeUpdated);this.observed.addEventListener("DOMSubtreeModified",this.handlerNodeUpdated);return this;},disconnect:function(){if(this.observed){this.observed.removeEventListener("DOMSubtreeModified",this.handlerNodeUpdated);this.observed.removeEventListener("DOMCharacterDataModified",this.handlerNodeUpdated);this.observed.removeEventListener("DOMNodeRemoved",this.handlerNodeRemoved);this.observed.removeEventListener("DOMNodeInserted",this.handlerNodeUpdated);delete this.observed;}},onNodeChange:function(changedNodes,ev){if(changedNodes.length==0){var self=this;setTimeout(function(){self.notifyNodeChanges();},0);}
changedNodes.push(ev.target);this.notifyNodeChanges();},notifyNodeChanges:function(){var record={removedNodes:this.record.removedNodes,addedNodes:this.record.addedNodes}
this.record.removedNodes=[];this.record.addedNodes=[];this.callback([record]);}});}
var BindingScope=DD.defClass({constructor:function(node,dataRoot){var self=this;this.observer=new DOMObserverClass(function(){self.onMutations.apply(self,arguments);});this.scope(node,dataRoot);},refresh:function(opts){var _opts={noUnbind:true};for(var k in opts){_opts[k]=opts[k];}
bindDOMTree(this.root,this.root,this,_opts);return this;},scope:function(node,dataRoot){this.unbind();this.root=node||document.body;this.dataRoot=dataRoot||DD.Models;return this;},bind:function(refresh){this.observer.observe(this.root,{childList:true,attributes:true,characterData:true,subtree:true});return refresh===false?this:this.refresh();},unbind:function(){this.observer.disconnect();if(this.root){unbindDOMTree(this.root);}
return this;},findBinding:function(node){for(;node&&node!=this.root;node=node.parentElement){var binding=bindingFromNode(node);if(binding){return binding;}}
return null;},onMutations:function(mutations){var self=this;mutations.forEach(function(record){var i;for(i=0;record.removedNodes&&i<record.removedNodes.length;i++){unbindDOMTree(record.removedNodes[i]);}
for(i=0;record.addedNodes&&i<record.addedNodes.length;i++){bindDOMTree(record.addedNodes[i],self.root,self,{noUnbind:true});}});}});DD.ListFactory=ListFactory;DD.TemplateListFactory=TemplateListFactory;DD.BindingScope=BindingScope;DD.binding=bindingFromNode;jQuery(document).ready(function(){if(DD.settings.autobind!=false&&DOMObserverClass){var scope=new BindingScope();scope.bind();DD.documentScope=scope;}});}(DataDrive);!function(DD){"use strict";var AjaxConnect=function(model,url,ajaxOpts){var settings=jQuery.extend({accepts:'application/json'},ajaxOpts||{});var successHandler=settings.success;var modelUpdate=settings.modelUpdate;var dataConvert=settings.dataConvert;delete settings.modelUpdate;delete settings.dataConvert;settings.success=function(data){if(typeof(modelUpdate)=='function'){modelUpdate.call(model,data);}else{if(typeof(dataConvert)=='function'){data=dataConvert(data);}
model.value=data;}
if(typeof(successHandler)=='function'){successHandler.apply(this,arguments);}};model.reload=function(){return jQuery.ajax(url,settings);};return model;};DD.AjaxConnect=AjaxConnect;DD.extensions.connect("Schema",{modeling:function(model,schema){if(schema.options.ajax&&schema.options.ajax.url){AjaxConnect(model,schema.options.ajax.url,schema.options.ajax.settings);}}});DD.Value.prototype.ajax=function(url,opts){return AjaxConnect(this,url,opts);};}(DataDrive);